<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.TabConfirmedEnabled="True" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="TabConfirmedEnabled" Type="InArgument(x:Boolean)" />
    <x:Property Name="out_ProcessedFilesCount" Type="OutArgument(x:String)" />
    <x:Property Name="out_VerifiedCount" Type="OutArgument(x:String)" />
    <x:Property Name="out_FilesToProcess" Type="OutArgument(x:String)" />
    <x:Property Name="out_ToVerify" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2124,17928.6666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Entire Process" sap:VirtualizedContainerService.HintSize="1682,17864" sap2010:WorkflowViewState.IdRef="Sequence_44">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="https://api.elis.rossum.ai/v1" Name="Endpoint" />
      <Variable x:TypeArguments="x:Int32" Name="InvoiceCounter" />
      <Variable x:TypeArguments="njl:JObject" Name="ConfigObj" />
      <Variable x:TypeArguments="x:Int32" Name="Counter" />
      <Variable x:TypeArguments="x:Int32" Name="FilesToReview" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1640,17772" sap2010:WorkflowViewState.IdRef="TryCatch_3">
      <TryCatch.Try>
        <Sequence sap2010:Annotation.AnnotationText="This workflow logs to ELIS using credentials provided in 'credentials.json'. It can validate imported documents based on the logic provided in 'Automatic Verification' (see placeholder). Without providing the customized logic, this workflow validates all documents by default. " DisplayName="Optional_AutomatedVerification" sap:VirtualizedContainerService.HintSize="1601.33333333333,17534" sap2010:WorkflowViewState.IdRef="Sequence_19">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="loginID" />
            <Variable x:TypeArguments="sd:DataTable" Name="DT_Invoice" />
            <Variable x:TypeArguments="x:String" Name="ExportedDataFilepath" />
            <Variable x:TypeArguments="ui:WorkbookApplication" Name="soubor_xlsx" />
            <Variable x:TypeArguments="njl:JObject" Name="FolderPathJOBJ" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Login" sap:VirtualizedContainerService.HintSize="1559.33333333333,2148.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="loginString" />
              <Variable x:TypeArguments="njl:JObject" Name="objJson" />
              <Variable x:TypeArguments="x:String" Name="ConfigString" />
              <Variable x:TypeArguments="x:Int32" Name="StatusCode" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReportStatus DisplayName="Report Status" sap:VirtualizedContainerService.HintSize="798,68" sap2010:WorkflowViewState.IdRef="ReportStatus_1" StatusText="[&quot;Logging to AI Engine...&quot;]" />
            <ui:ReadTextFile Content="[ConfigString]" DisplayName="Read Text File" FileName="Data\Config.json" sap:VirtualizedContainerService.HintSize="798,80.6666666666667" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize Config JSON" sap:VirtualizedContainerService.HintSize="798,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_5" JsonObject="[ConfigObj]" JsonString="[ConfigString]" />
            <Sequence sap2010:Annotation.AnnotationText="Delete existing and Download from storage" DisplayName="Initialize FolderInfo" sap:VirtualizedContainerService.HintSize="798,840.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_36">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="FolderPathData" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[File.Exists(&quot;Data\FolderPathData.json&quot;)]" DisplayName="If File Exists" sap:VirtualizedContainerService.HintSize="484,265.333333333333" sap2010:WorkflowViewState.IdRef="If_17">
                <If.Then>
                  <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="284,80.6666666666667" sap2010:WorkflowViewState.IdRef="Delete_2" Path="Data\FolderPathData.json" />
                </If.Then>
              </If>
              <ucas:DownloadStorageFile TimeoutMS="{x:Null}" Destination="Data\FolderPathData.json" DisplayName="Download Storage File" sap:VirtualizedContainerService.HintSize="484,190" sap2010:WorkflowViewState.IdRef="DownloadStorageFile_1" Path="FolderLocationData.json" StorageBucketName="InvoiceBucket" />
              <ui:ReadTextFile Content="[FolderPathData]" DisplayName="Read Text File" FileName="Data\FolderPathData.json" sap:VirtualizedContainerService.HintSize="484,80.6666666666667" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
              <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize FolderPath JSON" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_6" JsonObject="[FolderPathJOBJ]" JsonString="[FolderPathData]" />
            </Sequence>
            <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[ConfigObj.Item(&quot;LoginDataStorage&quot;).ToString]" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="798,80.6666666666667" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
              <ui:GetRobotAsset.Value>
                <OutArgument x:TypeArguments="x:String">[loginString]</OutArgument>
              </ui:GetRobotAsset.Value>
            </ui:GetRobotAsset>
            <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[loginString]" BodyFormat="application/json" DisplayName="HTTP Request - LOGIN" EndPoint="[Endpoint + &quot;/auth/login&quot;]" sap:VirtualizedContainerService.HintSize="798,22" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Result="[loginID]" StatusCode="[StatusCode]" TimeoutMS="20000">
              <ui:HttpClient.Attachments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Attachments>
              <ui:HttpClient.Cookies>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Cookies>
              <ui:HttpClient.Headers>
                <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
              </ui:HttpClient.Headers>
              <ui:HttpClient.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Parameters>
              <ui:HttpClient.UrlSegments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.UrlSegments>
            </ui:HttpClient>
            <If Condition="[StatusCode = 200]" DisplayName="If Login Success" sap:VirtualizedContainerService.HintSize="798,458.666666666667" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Then>
                <Sequence DisplayName="Log Success" sap:VirtualizedContainerService.HintSize="376,294.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_45">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ReportStatus DisplayName="Report Status" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="ReportStatus_2" StatusText="[&quot;Account Logged in&quot;]" />
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Trace" Message="[&quot;Logged-in to Rossum&quot;]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Log Error and Throw" sap:VirtualizedContainerService.HintSize="376,248.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_21">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Warn" Message="[&quot;Could not login to Rossum&quot;]" />
                  <Throw Exception="[New SystemException(&quot;Login Failed&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                </Sequence>
              </If.Else>
            </If>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="798,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[objJson]" JsonString="[loginID]" />
            <Assign sap:VirtualizedContainerService.HintSize="798,62" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[loginID]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[objJson("key").ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence DisplayName="Automatic Verification" sap:VirtualizedContainerService.HintSize="1559.33333333333,15222.6666666667" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="authKey" />
              <Variable x:TypeArguments="x:String" Name="ResultJSON" />
              <Variable x:TypeArguments="njl:JObject" Name="objJSON" />
              <Variable x:TypeArguments="s:String[]" Name="fieldsToExtract" />
              <Variable x:TypeArguments="x:String" Name="tableHeader" />
              <Variable x:TypeArguments="sd:DataTable" Name="DT_Invoices" />
              <Variable x:TypeArguments="scg:ICollection(x:String)" Name="DocURLs" />
              <Variable x:TypeArguments="x:String" Name="QueueID" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Create AuthKey" sap:VirtualizedContainerService.HintSize="1517.33333333333,252.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Create Authorization Key" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[authKey]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Token LOGIN_ID</InArgument>
                </Assign.Value>
              </Assign>
              <ui:Replace DisplayName="Insert LoginID to authKey" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="Replace_2" Input="[authKey]" IsBuilderTabModified="False" Pattern="LOGIN_ID" RegexOption="IgnoreCase, Compiled" Replacement="[loginID]" Result="[authKey]" />
            </Sequence>
            <Sequence DisplayName="Get Queue ID" sap:VirtualizedContainerService.HintSize="1517.33333333333,318" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="JsonQueues" />
                <Variable x:TypeArguments="njl:JObject" Name="JsonObjQueue" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="" BodyFormat="application/json" DisplayName="HTTP Request - LIST QUEUES" EndPoint="[Endpoint +&quot;\queues&quot;]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="GET" Result="[JsonQueues]" TimeoutMS="20000">
                <ui:HttpClient.Attachments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Attachments>
                <ui:HttpClient.Cookies>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Cookies>
                <ui:HttpClient.Headers>
                  <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                </ui:HttpClient.Headers>
                <ui:HttpClient.Parameters>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Parameters>
                <ui:HttpClient.UrlSegments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.UrlSegments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:HttpClient>
              <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[JsonObjQueue]" JsonString="[JsonQueues]" />
              <Assign DisplayName="Get Queue ID" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[QueueID]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[JsonObjQueue("results")(0)("id").ToString]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <Sequence DisplayName="List documents" sap:VirtualizedContainerService.HintSize="1517.33333333333,2304.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ReportStatus DisplayName="Report Status" sap:VirtualizedContainerService.HintSize="572.666666666667,68" sap2010:WorkflowViewState.IdRef="ReportStatus_3" StatusText="[&quot;Waiting for Uploads&quot;]" />
              <DoWhile sap2010:Annotation.AnnotationText="Waits until the documments are uploaded and read by Rossum Elis." DisplayName="Wait for Upload" sap:VirtualizedContainerService.HintSize="572.666666666667,1122.66666666667" sap2010:WorkflowViewState.IdRef="DoWhile_1">
                <DoWhile.Variables>
                  <Variable x:TypeArguments="x:Int32" Default="0" Name="WaitCounter" />
                  <Variable x:TypeArguments="x:Int32" Name="ImportingFilesCount" />
                </DoWhile.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <DoWhile.Condition>
                  <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="ImportingFilesCount &lt;&gt; 0" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                </DoWhile.Condition>
                <Sequence sap:VirtualizedContainerService.HintSize="526,924" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="" BodyFormat="multipart/json" DisplayName="HTTP Request - LIST Importing Docs" EndPoint="[Endpoint + &quot;/annotations?page_size=50&amp;status=importing&amp;queue=&quot;+ QueueID]" sap:VirtualizedContainerService.HintSize="484,52.6666666666667" sap2010:WorkflowViewState.IdRef="HttpClient_3" Method="GET" Result="[ResultJSON]" TimeoutMS="20000">
                    <ui:HttpClient.Attachments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Attachments>
                    <ui:HttpClient.Cookies>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Cookies>
                    <ui:HttpClient.Headers>
                      <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                    </ui:HttpClient.Headers>
                    <ui:HttpClient.Parameters>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Parameters>
                    <ui:HttpClient.UrlSegments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.UrlSegments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:HttpClient>
                  <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_3" JsonObject="[objJSON]" JsonString="[ResultJSON]" />
                  <Assign sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[ImportingFilesCount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[objJSON("results").Count]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[WaitCounter=0 AND ImportingFilesCount&lt;&gt;0]" DisplayName="Log waiting time notice" sap:VirtualizedContainerService.HintSize="484,371.333333333333" sap2010:WorkflowViewState.IdRef="If_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,186.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Waiting for &quot;+ImportingFilesCount.ToString+&quot; document(s) being imported...&quot;]" />
                      </Sequence>
                    </If.Then>
                  </If>
                  <Assign DisplayName="Increase WaitCounter" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[WaitCounter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[WaitCounter+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                </Sequence>
              </DoWhile>
              <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="Gets list of files in to review state in ELis" BodyFormat="multipart/json" DisplayName="HTTP Request - LIST DOCS" EndPoint="[Endpoint + &quot;/annotations?status=to_review&amp;page_size=50&amp;queue=&quot;+ QueueID]" sap:VirtualizedContainerService.HintSize="572.666666666667,22" sap2010:WorkflowViewState.IdRef="HttpClient_4" Method="GET" Result="[ResultJSON]" TimeoutMS="20000">
                <ui:HttpClient.Attachments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Attachments>
                <ui:HttpClient.Cookies>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Cookies>
                <ui:HttpClient.Headers>
                  <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                </ui:HttpClient.Headers>
                <ui:HttpClient.Parameters>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Parameters>
                <ui:HttpClient.UrlSegments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.UrlSegments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:HttpClient>
              <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="572.666666666667,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4" JsonObject="[objJSON]" JsonString="[ResultJSON]" />
              <Assign DisplayName="Count Files to Review" sap:VirtualizedContainerService.HintSize="572.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_17">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[FilesToReview]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[objJSON("results").Count]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="572.666666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Trace" Message="[&quot;No. of files to review: &quot; + FilesToReview.ToString]" />
              <If Condition="[ResultJSON.ToString.Contains(&quot;authentication_failed&quot;)]" DisplayName="Stop if wrong credentials " sap:VirtualizedContainerService.HintSize="572.666666666667,244.666666666667" sap2010:WorkflowViewState.IdRef="If_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Throw Exception="[New Exception(&quot;Wrong credentials&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                </If.Then>
              </If>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="572.666666666667,52.6666666666667" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="418,576" sap2010:WorkflowViewState.IdRef="Sequence_34">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence sap2010:Annotation.AnnotationText="Not Used" DisplayName="Create DT to store data" sap:VirtualizedContainerService.HintSize="376,484" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Define fieldsToExtract" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_6">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:String[]">[fieldsToExtract]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:String[]">[{"elis_url","invoice_id", "order_id", "date_issue", "amount_total_tax", "amount_total_base", "sender_name", "sender_dic", "recipient_name"}]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[tableHeader]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[String.Join(",", fieldsToExtract)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:BuildDataTable DataTable="[DT_Invoices]" DisplayName="Build data table" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Invoice_x0020_Name&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Invoice_x0020_Path&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Elis_x0020_Invoice_x0020_ID&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:BuildDataTable>
                      <ui:GenerateDataTable ColumnSizes="{x:Null}" NewLineSeparator="{x:Null}" Positions="{x:Null}" AutoDetectTypes="False" CSVParsing="False" ColumnSeparators="," DataTable="[DT_Invoices]" DisplayName="Generate Data Table" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="GenerateDataTable_1" Input="[tableHeader]" UseColumnHeader="True" />
                    </Sequence>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
              <Assign DisplayName="Initialize DocURLs" sap:VirtualizedContainerService.HintSize="572.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:ICollection(x:String)">[DocURLs]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:ICollection(x:String)">[new List(of string)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Init Counter" sap:VirtualizedContainerService.HintSize="572.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_48">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[InvoiceCounter]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <ui:ForEach x:TypeArguments="njl:JObject" CurrentIndex="[Counter]" DisplayName="Process each document" sap:VirtualizedContainerService.HintSize="1517.33333333333,12135.3333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[objJSON(&quot;results&quot;)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="njl:JObject">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="njl:JObject" Name="URL" />
                  </ActivityAction.Argument>
                  <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Extract values and decide if to be verified" sap:VirtualizedContainerService.HintSize="1480.66666666667,11996.6666666667" sap2010:WorkflowViewState.IdRef="Sequence_16">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="ConfirmDoc" />
                      <Variable x:TypeArguments="x:String" Name="ExportedDataJson" />
                      <Variable x:TypeArguments="x:String" Name="AnnotationID" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Pre-Export document data" sap:VirtualizedContainerService.HintSize="1438.66666666667,1507.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ReportStatus DisplayName="Report Status" sap:VirtualizedContainerService.HintSize="424.666666666667,68" sap2010:WorkflowViewState.IdRef="ReportStatus_4" StatusText="[&quot;Verifying document &quot; + (Counter + 1).ToString + &quot; of &quot; + FilesToReview.ToString]" />
                      <Assign DisplayName="Extract Annotation" sap:VirtualizedContainerService.HintSize="424.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_9">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[AnnotationID]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[URL("id").ToString.Split("/"c).Last]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="Export data of the invoice defined by Annotation ID" BodyFormat="multipart/json" DisplayName="HTTP Request - EXPORT DATA" EndPoint="[Endpoint + &quot;/queues/&quot; + QueueID + &quot;/export?format=csv&amp;id=&quot; + AnnotationID]" sap:VirtualizedContainerService.HintSize="424.666666666667,67.3333333333333" sap2010:WorkflowViewState.IdRef="HttpClient_5" Method="GET" Result="[ExportedDataJson]" TimeoutMS="20000">
                        <ui:HttpClient.Attachments>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.Attachments>
                        <ui:HttpClient.Cookies>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.Cookies>
                        <ui:HttpClient.Headers>
                          <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                        </ui:HttpClient.Headers>
                        <ui:HttpClient.Parameters>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.Parameters>
                        <ui:HttpClient.UrlSegments>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.UrlSegments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:HttpClient>
                      <Sequence DisplayName="Write data to .csv" sap:VirtualizedContainerService.HintSize="424.666666666667,1098" sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Fix Duplicates" sap:VirtualizedContainerService.HintSize="382.666666666667,588.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_22">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="s:String[]" Name="ReplaceWordsArray" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Init Array of Duplicate Column Names" sap:VirtualizedContainerService.HintSize="340.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_20">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:String[]">[ReplaceWordsArray]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:String[]">[{"VAT Rate", "Total Amount"}]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="340.666666666667,394.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[ReplaceWordsArray]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="Word" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,256" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:Int32" Name="WordIndex" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_21">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[WordIndex]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[ExportedDataJson.LastIndexOf(Word) + Word.Length]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_22">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[ExportedDataJson]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[ExportedDataJson.Insert(WordIndex, "_Line")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                        </Sequence>
                        <ui:WriteTextFile sap2010:Annotation.AnnotationText="The Text vriable is csv format, not json&#xA;" DisplayName="Write Text File" Encoding="UTF-8" FileName="Data\temp.txt" sap:VirtualizedContainerService.HintSize="382.666666666667,180.666666666667" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[ExportedDataJson]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:WriteTextFile>
                        <ui:ReadCsvFile DataTable="[DT_Invoice]" Delimitator="Comma" DisplayName="Read as CSV" Encoding="UTF-8" FilePath="Data\temp.txt" sap:VirtualizedContainerService.HintSize="382.666666666667,156.666666666667" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" />
                      </Sequence>
                    </Sequence>
                    <Sequence DisplayName="Verify Imported Data" sap:VirtualizedContainerService.HintSize="1438.66666666667,9444.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_67">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Boolean" Name="TotalAmountTest" />
                        <Variable x:TypeArguments="x:Boolean" Name="ZeroValueTest" />
                        <Variable x:TypeArguments="x:Boolean" Name="UnitPriceTest" />
                        <Variable x:TypeArguments="x:Boolean" Name="TotalUnitPriceTest" />
                        <Variable x:TypeArguments="x:Int32" Name="Index" />
                        <Variable x:TypeArguments="x:Boolean" Name="Dates" />
                        <Variable x:TypeArguments="x:Boolean" Name="OrderNumberExists" />
                        <Variable x:TypeArguments="x:Boolean" Name="InvoiceNumberExists" />
                        <Variable x:TypeArguments="x:Boolean" Name="AccountCorrect" />
                        <Variable x:TypeArguments="x:Boolean" Name="DeliveryNoteExists" />
                        <Variable x:TypeArguments="x:Boolean" Name="ID_Status" />
                        <Variable x:TypeArguments="x:Boolean" Name="VAT_Status" />
                        <Variable x:TypeArguments="x:Boolean" Name="Statuses" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence sap2010:Annotation.AnnotationText="General test if Invoice number exists in datatable and if Various Items exist in DataTable" DisplayName="Global Tests" sap:VirtualizedContainerService.HintSize="1396.66666666667,3832.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_54">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT_Invoice]" DisplayName="For Each Row check Invoice Number" sap:VirtualizedContainerService.HintSize="1354.66666666667,759.333333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Check if Invoice number not Empty" sap:VirtualizedContainerService.HintSize="840,606.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[row.Item(&quot;Invoice Number&quot;).Equals(&quot;&quot;)]" DisplayName="If Invoice No. Empty" sap:VirtualizedContainerService.HintSize="798,514.666666666667" sap2010:WorkflowViewState.IdRef="If_19">
                                  <If.Then>
                                    <Sequence DisplayName="False and report" sap:VirtualizedContainerService.HintSize="376,288.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_80">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign False" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_50">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[InvoiceNumberExists]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Warn" Message="[&quot;Invoice Number Not Found&quot;]" />
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Make True and Break" sap:VirtualizedContainerService.HintSize="376,350.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign True" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_51">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[InvoiceNumberExists]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Invoice Number Found&quot;]" />
                                      <ui:Break sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Break_3" />
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                        </ui:ForEachRow>
                        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT_Invoice]" DisplayName="For Each Row check Delivery Note" sap:VirtualizedContainerService.HintSize="1354.66666666667,759.333333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_10">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Check if Delivery Note field not Empty" sap:VirtualizedContainerService.HintSize="840,606.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_78">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[row.Item(&quot;Delivery Note&quot;).Equals(&quot;&quot;)]" DisplayName="If Delivery Note Empty" sap:VirtualizedContainerService.HintSize="798,514.666666666667" sap2010:WorkflowViewState.IdRef="If_30">
                                  <If.Then>
                                    <Sequence DisplayName="Assign False and Log" sap:VirtualizedContainerService.HintSize="376,288.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign False" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_83">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[DeliveryNoteExists]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Warn" Message="[&quot;Delivery note not found&quot;]" />
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Make True and Break" sap:VirtualizedContainerService.HintSize="376,350.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign True" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_84">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[DeliveryNoteExists]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Delivery Note Number Found&quot;]" />
                                      <ui:Break sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Break_9" />
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                        </ui:ForEachRow>
                        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT_Invoice]" DisplayName="For Each Row check Bank Account Number" sap:VirtualizedContainerService.HintSize="1354.66666666667,1046" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Check if Bank Account number not Empty" sap:VirtualizedContainerService.HintSize="1304,893.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[row.Item(&quot;Account Number&quot;).Equals(&quot;&quot;)]" DisplayName="If Account No. Empty" sap:VirtualizedContainerService.HintSize="1262,801.333333333333" sap2010:WorkflowViewState.IdRef="If_27">
                                  <If.Then>
                                    <Sequence DisplayName="Account No. does not exist" sap:VirtualizedContainerService.HintSize="840,637.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If sap2010:Annotation.AnnotationText="Verification algorithm can be added to verify IBAN format" Condition="[row.Item(&quot;IBAN&quot;).Equals(&quot;&quot;)]" DisplayName="If IBAN Exists " sap:VirtualizedContainerService.HintSize="798,545.333333333333" sap2010:WorkflowViewState.IdRef="If_28">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence DisplayName="Set True and Log" sap:VirtualizedContainerService.HintSize="376,350.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign DisplayName="Assign True" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_78">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[AccountCorrect]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[&quot;IBAN found&quot;]" />
                                            <ui:Break sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Break_8" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Set False and Log" sap:VirtualizedContainerService.HintSize="376,288.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign DisplayName="Assign False" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_76">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[AccountCorrect]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Warn" Message="[&quot;No Bank account nor IBAN fount&quot;]" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Make True and Break" sap:VirtualizedContainerService.HintSize="376,268" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CheckBankAccountNumber workflow" sap:VirtualizedContainerService.HintSize="334,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="CheckBankAccountNumber.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Account">[row.Item("Account Number").ToString]</InArgument>
                                          <OutArgument x:TypeArguments="x:Boolean" x:Key="out_AccountCorrect">[AccountCorrect]</OutArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_BankCode">[row.Item("Bank Code").ToString]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <ui:Break sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Break_7" />
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                        </ui:ForEachRow>
                        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT_Invoice]" DisplayName="For Each Row Check OrderNo." sap:VirtualizedContainerService.HintSize="1354.66666666667,1025.33333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Check if at least One OrderNo." sap:VirtualizedContainerService.HintSize="1220,872.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[row.Item(&quot;Order Number&quot;).ToString.Equals(&quot;&quot;)]" DisplayName="If Order Number Empty" sap:VirtualizedContainerService.HintSize="1178,780.666666666667" sap2010:WorkflowViewState.IdRef="If_20">
                                  <If.Then>
                                    <Sequence DisplayName="Assign False and Log" sap:VirtualizedContainerService.HintSize="376,288.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign False" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_52">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[OrderNumberExists]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Warn" Message="[&quot;Order Number not Found&quot;]" />
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Make True and Break" sap:VirtualizedContainerService.HintSize="756,616.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="OrderNumber" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign Order Number" sap:VirtualizedContainerService.HintSize="714,62" sap2010:WorkflowViewState.IdRef="Assign_82">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[OrderNumber]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[row.Item("Order Number").ToString.Trim.Replace(" ","")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign True if Pattern Matches" sap:VirtualizedContainerService.HintSize="714,62" sap2010:WorkflowViewState.IdRef="Assign_53">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[OrderNumberExists]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">[System.Text.RegularExpressions.Regex.IsMatch(OrderNumber,"\d{8}\/\w{2}")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[OrderNumberExists]" DisplayName="If Exists in correct format" sap:VirtualizedContainerService.HintSize="714,258.666666666667" sap2010:WorkflowViewState.IdRef="If_29">
                                        <If.Then>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[&quot;Order Number Found&quot;]" />
                                        </If.Then>
                                        <If.Else>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Warn" Message="[&quot;Order Number Wrong Format&quot;]" />
                                        </If.Else>
                                      </If>
                                      <ui:Break sap:VirtualizedContainerService.HintSize="714,22" sap2010:WorkflowViewState.IdRef="Break_4" />
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                        </ui:ForEachRow>
                      </Sequence>
                      <Sequence DisplayName="Check Dates" sap:VirtualizedContainerService.HintSize="1396.66666666667,1226" sap2010:WorkflowViewState.IdRef="Sequence_59">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch DisplayName="Try to Check Dates" sap:VirtualizedContainerService.HintSize="878.666666666667,1134" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                          <TryCatch.Variables>
                            <Variable x:TypeArguments="s:DateTime" Name="InvoiceDate" />
                          </TryCatch.Variables>
                          <TryCatch.Try>
                            <Sequence DisplayName="Parse and Compare Dates" sap:VirtualizedContainerService.HintSize="840,896" sap2010:WorkflowViewState.IdRef="Sequence_57">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="s:DateTime" Name="TaxDate" />
                                <Variable x:TypeArguments="s:DateTime" Name="DueDate" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign Invoice Date" sap:VirtualizedContainerService.HintSize="798,62" sap2010:WorkflowViewState.IdRef="Assign_54">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:DateTime">[InvoiceDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:DateTime">[Date.Parse(DT_Invoice.Rows(0).Item("Issue Date").ToString, System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign Tax Date" sap:VirtualizedContainerService.HintSize="798,62" sap2010:WorkflowViewState.IdRef="Assign_55">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:DateTime">[TaxDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:DateTime">[Date.Parse(DT_Invoice.Rows(0).Item("Tax Point Date").ToString, System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:Annotation.AnnotationText="If parsing fails, date incorrect and FALSE is caught by Catch" DisplayName="Assign Due Date" sap:VirtualizedContainerService.HintSize="798,107.333333333333" sap2010:WorkflowViewState.IdRef="Assign_71">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:DateTime">[DueDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:DateTime">[Date.Parse(DT_Invoice.Rows(0).Item("Due Date").ToString, System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                              <If Condition="[InvoiceDate &gt;= TaxDate And InvoiceDate&lt;= TaxDate.AddDays(15)]" DisplayName="If Tax Date and Invoice Date Fit" sap:VirtualizedContainerService.HintSize="798,452.666666666667" sap2010:WorkflowViewState.IdRef="If_21">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,288.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Assign True" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_56">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Boolean">[Dates]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Info" Message="[&quot;Dates Within Range&quot;]" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,288.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Assign False" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_57">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Boolean">[Dates]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Warn" Message="[&quot;Dates out of Range&quot;]" />
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="844.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,288.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Warn" Message="[&quot;Could not Read Dates or a Date Missing&quot;]" />
                                  <Assign DisplayName="Assign False" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_58">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[Dates]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </Sequence>
                      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT_Invoice]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="1396.66666666667,788.666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_11">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Check ID" sap:VirtualizedContainerService.HintSize="962,636" sap2010:WorkflowViewState.IdRef="Sequence_82">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[Not row.Item(&quot;Vendor Company ID&quot;).Equals(&quot;&quot;)]" DisplayName="If ID not empty" sap:VirtualizedContainerService.HintSize="920,544" sap2010:WorkflowViewState.IdRef="If_31">
                                <If.Then>
                                  <Sequence DisplayName="Get ID and break" sap:VirtualizedContainerService.HintSize="612,380" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[row.Item(&quot;Vendor Company ID&quot;).ToString.Replace(&quot; &quot;,&quot;&quot;).Equals(&quot;26196891&quot;)]" DisplayName="If ID same as Benet" sap:VirtualizedContainerService.HintSize="570,226" sap2010:WorkflowViewState.IdRef="If_32">
                                      <If.Then>
                                        <Assign DisplayName="Assign False ID" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_86">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[ID_Status]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                      <If.Else>
                                        <Assign DisplayName="Assign Correct ID" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_87">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[ID_Status]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Else>
                                    </If>
                                    <ui:Break sap:VirtualizedContainerService.HintSize="570,22" sap2010:WorkflowViewState.IdRef="Break_10" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Assign DisplayName="Assign ID False" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_85">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[ID_Status]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                      </ui:ForEachRow>
                      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT_Invoice]" DisplayName="For Each Row Get VAT no." sap:VirtualizedContainerService.HintSize="1396.66666666667,788.666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_12">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Check VAT no" sap:VirtualizedContainerService.HintSize="962,636" sap2010:WorkflowViewState.IdRef="Sequence_83">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[Not row.Item(&quot;Vendor VAT Number&quot;).Equals(&quot;&quot;)]" DisplayName="If VAT no. not empty" sap:VirtualizedContainerService.HintSize="920,544" sap2010:WorkflowViewState.IdRef="If_34">
                                <If.Then>
                                  <Sequence DisplayName="Find VAT No and Break" sap:VirtualizedContainerService.HintSize="612,380" sap2010:WorkflowViewState.IdRef="Sequence_85">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[row.Item(&quot;Vendor Company ID&quot;).ToString.Replace(&quot; &quot;,&quot;&quot;).Equals(&quot;CZ26196891&quot;)]" DisplayName="If VAT No same as Benet" sap:VirtualizedContainerService.HintSize="570,226" sap2010:WorkflowViewState.IdRef="If_33">
                                      <If.Then>
                                        <Assign DisplayName="Assign False VAT no" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_88">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[VAT_Status]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                      <If.Else>
                                        <Assign DisplayName="Assign Correct VAT no" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_89">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[VAT_Status]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Else>
                                    </If>
                                    <ui:Break sap:VirtualizedContainerService.HintSize="570,22" sap2010:WorkflowViewState.IdRef="Break_11" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Assign DisplayName="Assign  False VAT no" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_90">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[VAT_Status]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                      </ui:ForEachRow>
                      <Assign sap2010:Annotation.AnnotationText="If VAT number or ID number is True, Check is True" DisplayName="Assign Statuses" sap:VirtualizedContainerService.HintSize="1396.66666666667,107.333333333333" sap2010:WorkflowViewState.IdRef="Assign_91">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[Statuses]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">[ID_Status Or VAT_Status]</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <If Condition="[OrderNumberExists AND InvoiceNumberExists AND Dates AND AccountCorrect AND DeliveryNoteExists AND Statuses]" DisplayName="If Global test passed" sap:VirtualizedContainerService.HintSize="1396.66666666667,2316.66666666667" sap2010:WorkflowViewState.IdRef="If_25">
                        <If.Then>
                          <ui:ForEachRow CurrentIndex="[Index]" DataTable="[DT_Invoice]" DisplayName="For Each Row do counting tests" sap:VirtualizedContainerService.HintSize="971.333333333333,2152.66666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
                            <ui:ForEachRow.Body>
                              <ActivityAction x:TypeArguments="sd:DataRow">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Process Verification" sap:VirtualizedContainerService.HintSize="920.666666666667,2000" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each Cell Replace Empty values" sap:VirtualizedContainerService.HintSize="878.666666666667,385.333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[DT_Invoice.Columns]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="sd:DataColumn">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="Column" />
                                        </ActivityAction.Argument>
                                        <If Condition="[row.item(Column.ToString) is &quot;&quot;]" DisplayName="If Empty Cell" sap:VirtualizedContainerService.HintSize="484,246.666666666667" sap2010:WorkflowViewState.IdRef="If_22">
                                          <If.Then>
                                            <Assign DisplayName="Replace by Zero Value" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_59">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[row.item(Column.ToString)]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">[0]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                        </If>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                  </ui:ForEach>
                                  <TryCatch DisplayName="Try to Validate" sap:VirtualizedContainerService.HintSize="878.666666666667,1482.66666666667" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                    <TryCatch.Try>
                                      <Sequence DisplayName="Validation" sap:VirtualizedContainerService.HintSize="840,1244.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Validate Global Test" sap:VirtualizedContainerService.HintSize="798,62" sap2010:WorkflowViewState.IdRef="Assign_60">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[TotalAmountTest]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">[math.Round(cdbl(row.Item("Total Without Tax")) + cdbl(row.Item("Total Tax")),0) = math.Round(cdbl(row.Item("Total Amount_Line")),0)]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="798,52.6666666666667" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                                          <ui:CommentOut.Body>
                                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="696,758" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Validate Zero Value Test" sap:VirtualizedContainerService.HintSize="654,62" sap2010:WorkflowViewState.IdRef="Assign_61">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[ZeroValueTest]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">[Not(cdbl(row.Item("VAT Base")) = 0 AND cdbl(row.Item("Total Base")) = 0)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <If Condition="[row.item(&quot;Description&quot;).ToString isnot &quot;0&quot;]" DisplayName="If Description line present" sap:VirtualizedContainerService.HintSize="654,564" sap2010:WorkflowViewState.IdRef="If_23">
                                                <If.Then>
                                                  <Sequence DisplayName="Verify Data" sap:VirtualizedContainerService.HintSize="304,403.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign DisplayName="Validate Unit Price Test" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_62">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[UnitPriceTest]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">[math.Round(cdbl(row.Item("Quantity")) * cdbl(row.Item("Unit Price Without VAT")),2) = math.Round(cdbl(row.Item("Total Base")),2)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign sap2010:Annotation.AnnotationText="Testing only- set to True overrides test value above" DisplayName="Validate Unit Price Test" sap:VirtualizedContainerService.HintSize="262,107.333333333333" sap2010:WorkflowViewState.IdRef="Assign_63">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[UnitPriceTest]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">[True]</InArgument>
                                                      </Assign.Value>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </Assign>
                                                    <Assign DisplayName="Validate Total Unit price Test" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_64">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[TotalUnitPriceTest]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">[math.Round(((1+(cdbl(row.Item("VAT Rate_Line")))/100) * cdbl(row.Item("Total Base"))),2) = math.Round(cdbl(row.Item("Total Amount_Line")),2)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence DisplayName="Skip" sap:VirtualizedContainerService.HintSize="304,256" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign DisplayName="Assign True to Unit Price Test" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_65">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[UnitPriceTest]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="Assign True to Total Unit Price Test" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_66">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[TotalUnitPriceTest]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ui:CommentOut.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:CommentOut>
                                        <Sequence sap2010:Annotation.AnnotationText="Test above skipped, remove this if you wish to reinstate them" DisplayName="Skip Detailed Tests" sap:VirtualizedContainerService.HintSize="798,403.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Assign True to Zero value test" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_81">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[ZeroValueTest]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign True to Unit Price Test" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_79">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[UnitPriceTest]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign True to Total Unit Price Test" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_80">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[TotalUnitPriceTest]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                        <If Condition="[TotalAmountTest AND ZeroValueTest AND UnitPriceTest AND TotalUnitPriceTest]" DisplayName="If all Tests Passed" sap:VirtualizedContainerService.HintSize="798,514.666666666667" sap2010:WorkflowViewState.IdRef="If_24">
                                          <If.Then>
                                            <Sequence DisplayName="Set Flag True and Log" sap:VirtualizedContainerService.HintSize="376,288.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Verification OK" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_67">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[ConfirmDoc]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:LogMessage DisplayName="Log Success Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[&quot;Correct at row: &quot; + (Index + 1).toString + vbCr + &quot;Total Amount Test: &quot; + TotalAmountTest.ToString + VbCr + &quot;; Zero Value Test: &quot; + ZeroValueTest.ToString + VbCr + &quot;; Unit Price Test: &quot; + UnitPriceTest.ToString + VbCr + &quot;; TotalUnitPrice Test &quot; + TotalUnitPriceTest.ToString]" />
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence DisplayName="Set Flag False and Log" sap:VirtualizedContainerService.HintSize="376,350.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Verification Failed" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_68">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[ConfirmDoc]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:LogMessage DisplayName="Log Failed test Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="[&quot;Mistake at row: &quot; + (Index + 1).toString + vbCr + &quot;Total Amount Test: &quot; + TotalAmountTest.ToString + VbCr + &quot;; Zero Value Test: &quot; + ZeroValueTest.ToString + VbCr + &quot;; Unit Price Test: &quot; + UnitPriceTest.ToString + VbCr + &quot;; TotalUnitPrice Test &quot; + TotalUnitPriceTest.ToString]" />
                                              <ui:Break sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Break_5" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="844.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Test Failed" sap:VirtualizedContainerService.HintSize="304,316" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign DisplayName="Assign Failed Test" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_69">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[ConfirmDoc]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="Mistake- an Exception was thrown" />
                                            <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_6" />
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEachRow.Body>
                          </ui:ForEachRow>
                        </If.Then>
                        <If.Else>
                          <Assign DisplayName="Verification Failed" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_70">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[ConfirmDoc]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1396.66666666667,52.6666666666667" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,237.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_69">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:WriteRange AddHeaders="True" sap2010:Annotation.AnnotationText="For testing purposes only- Remove" DataTable="[DT_Invoice]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,145.333333333333" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="Sheet1" StartingCell="A1" WorkbookPath="[&quot;Data\RoughWorkbook&quot; + AnnotationID + &quot;.xlsx&quot;]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:WriteRange>
                          </Sequence>
                        </ui:CommentOut.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CommentOut>
                    </Sequence>
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1438.66666666667,52.6666666666667" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="911.333333333333,2559.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_68">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Verify Imported Data" sap:VirtualizedContainerService.HintSize="869.333333333333,2507.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_25">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Boolean" Name="TotalAmountTest" />
                              <Variable x:TypeArguments="x:Boolean" Name="ZeroValueTest" />
                              <Variable x:TypeArguments="x:Boolean" Name="UnitPriceTest" />
                              <Variable x:TypeArguments="x:Boolean" Name="TotalUnitPriceTest" />
                              <Variable x:TypeArguments="x:Int32" Name="Index" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ForEachRow CurrentIndex="[Index]" DataTable="[DT_Invoice]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="827.333333333333,2230" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                              <ui:ForEachRow.Body>
                                <ActivityAction x:TypeArguments="sd:DataRow">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Process Verification" sap:VirtualizedContainerService.HintSize="776.666666666667,2080.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each Cell Replace Empty values" sap:VirtualizedContainerService.HintSize="734.666666666667,348" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[DT_Invoice.Columns]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="sd:DataColumn">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="Column" />
                                          </ActivityAction.Argument>
                                          <If Condition="[row.item(Column.ToString) is &quot;&quot;]" DisplayName="If Empty Cell" sap:VirtualizedContainerService.HintSize="484,212.666666666667" sap2010:WorkflowViewState.IdRef="If_15">
                                            <If.Then>
                                              <Assign DisplayName="Replace by Zero Value" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_39">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Object">[row.item(Column.ToString)]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Object">[0]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                          </If>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                    </ui:ForEach>
                                    <TryCatch DisplayName="Try to Validate" sap:VirtualizedContainerService.HintSize="734.666666666667,1600.66666666667" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                                      <TryCatch.Try>
                                        <Sequence DisplayName="Validation" sap:VirtualizedContainerService.HintSize="696,1362.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Validate Global Test" sap:VirtualizedContainerService.HintSize="654,62" sap2010:WorkflowViewState.IdRef="Assign_31">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[TotalAmountTest]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">[math.Round(cdbl(row.Item("Total Without Tax")) + cdbl(row.Item("Total Tax")),2) = math.Round(cdbl(row.Item("Total Amount")),2)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Validate Zero Value Test" sap:VirtualizedContainerService.HintSize="654,62" sap2010:WorkflowViewState.IdRef="Assign_32">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[ZeroValueTest]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">[Not(cdbl(row.Item("VAT Base")) = 0 AND cdbl(row.Item("Total Base")) = 0)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <If Condition="[row.item(&quot;Description&quot;).ToString isnot &quot;0&quot;]" DisplayName="If Description line present" sap:VirtualizedContainerService.HintSize="654,554" sap2010:WorkflowViewState.IdRef="If_13">
                                            <If.Then>
                                              <Sequence DisplayName="Verify Data" sap:VirtualizedContainerService.HintSize="304,403.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Validate Unit Price Test" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_33">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[UnitPriceTest]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">[math.Round(cdbl(row.Item("Quantity")) * cdbl(row.Item("Unit Price Without VAT")),2) = math.Round(cdbl(row.Item("Total Base")),2)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign sap2010:Annotation.AnnotationText="Testing only- set to True overrides test value above" DisplayName="Validate Unit Price Test" sap:VirtualizedContainerService.HintSize="262,107.333333333333" sap2010:WorkflowViewState.IdRef="Assign_47">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[UnitPriceTest]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">[True]</InArgument>
                                                  </Assign.Value>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Assign>
                                                <Assign DisplayName="Validate Total Unit price Test" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_34">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[TotalUnitPriceTest]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">[math.Round(((1+(cdbl(row.Item("VAT Rate_Line")))/100) * cdbl(row.Item("Total Base"))),2) = math.Round(cdbl(row.Item("Total Amount_Line")),2)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Skip" sap:VirtualizedContainerService.HintSize="304,256" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Assign True to Unit Price Test" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_35">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[UnitPriceTest]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign True to Total Unit Price Test" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_36">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[TotalUnitPriceTest]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <If Condition="[TotalAmountTest AND ZeroValueTest AND UnitPriceTest AND TotalUnitPriceTest]" DisplayName="If all Tests Passed" sap:VirtualizedContainerService.HintSize="654,472.666666666667" sap2010:WorkflowViewState.IdRef="If_14">
                                            <If.Then>
                                              <Sequence DisplayName="Set Flag True and Log" sap:VirtualizedContainerService.HintSize="304,256.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Verification OK" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_37">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[ConfirmDoc]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Correct at row: &quot; + (Index + 1).toString + vbCr + &quot;Total Amount Test: &quot; + TotalAmountTest.ToString + VbCr + &quot;; Zero Value Test: &quot; + ZeroValueTest.ToString + VbCr + &quot;; Unit Price Test: &quot; + UnitPriceTest.ToString + VbCr + &quot;; TotalUnitPrice Test &quot; + TotalUnitPriceTest.ToString + &quot;; Value Calc: &quot; + ((1+(cdbl(row.Item(&quot;VAT Rate_Line&quot;)))/100) * cdbl(row.Item(&quot;Total Base&quot;))).ToString + &quot;; Value Result: &quot; + (cdbl(row.Item(&quot;Total Amount_Line&quot;))).ToString]" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Set Flag False and Log" sap:VirtualizedContainerService.HintSize="304,318.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Verification Failed" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_38">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[ConfirmDoc]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;Mistake at row: &quot; + (Index + 1).toString + vbCr + &quot;Total Amount Test: &quot; + TotalAmountTest.ToString + VbCr + &quot;; Zero Value Test: &quot; + ZeroValueTest.ToString + VbCr + &quot;; Unit Price Test: &quot; + UnitPriceTest.ToString + VbCr + &quot;; TotalUnitPrice Test &quot; + TotalUnitPriceTest.ToString + &quot;; Value Calc: &quot; + ((1+(cdbl(row.Item(&quot;VAT Rate_Line&quot;)))/100) * cdbl(row.Item(&quot;Total Base&quot;))).ToString + &quot;; Value Result: &quot; + (cdbl(row.Item(&quot;Total Amount_Line&quot;))).ToString]" />
                                                <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </TryCatch.Try>
                                      <TryCatch.Catches>
                                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="700.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ActivityAction x:TypeArguments="s:Exception">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Test Failed" sap:VirtualizedContainerService.HintSize="304,318.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign Failed Test" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_42">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[ConfirmDoc]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="Mistake- an Exception was thrown" />
                                              <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_2" />
                                            </Sequence>
                                          </ActivityAction>
                                        </Catch>
                                      </TryCatch.Catches>
                                    </TryCatch>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEachRow.Body>
                            </ui:ForEachRow>
                            <ui:WriteRange AddHeaders="True" sap2010:Annotation.AnnotationText="For testing purposes only- Remove" DataTable="[DT_Invoice]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="827.333333333333,145.333333333333" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" StartingCell="A1" WorkbookPath="[&quot;Data\RoughWorkbook&quot; + AnnotationID + &quot;.xlsx&quot;]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:WriteRange>
                          </Sequence>
                        </Sequence>
                      </ui:CommentOut.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CommentOut>
                    <If Condition="[ConfirmDoc]" DisplayName="Send decision to Elis" sap:VirtualizedContainerService.HintSize="1438.66666666667,628.666666666667" sap2010:WorkflowViewState.IdRef="If_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="CONFIRM doc and (Optionally) Save Data to Excel" sap:VirtualizedContainerService.HintSize="376,464.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_15">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="" BodyFormat="multipart/json" DisplayName="Set to REVIEWING" EndPoint="[URL(&quot;url&quot;).ToString + &quot;/start&quot;]" sap:VirtualizedContainerService.HintSize="334,52.6666666666667" sap2010:WorkflowViewState.IdRef="HttpClient_6" Method="POST" Result="[ResultJSON]" TimeoutMS="20000">
                            <ui:HttpClient.Attachments>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.Attachments>
                            <ui:HttpClient.Cookies>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.Cookies>
                            <ui:HttpClient.Headers>
                              <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                            </ui:HttpClient.Headers>
                            <ui:HttpClient.Parameters>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.Parameters>
                            <ui:HttpClient.UrlSegments>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.UrlSegments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:HttpClient>
                          <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="" BodyFormat="multipart/json" DisplayName="CONFIRM" EndPoint="[URL(&quot;url&quot;).ToString + &quot;/confirm&quot;]" sap:VirtualizedContainerService.HintSize="334,52.6666666666667" sap2010:WorkflowViewState.IdRef="HttpClient_7" Method="POST" Result="[ResultJSON]" TimeoutMS="20000">
                            <ui:HttpClient.Attachments>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.Attachments>
                            <ui:HttpClient.Cookies>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.Cookies>
                            <ui:HttpClient.Headers>
                              <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                            </ui:HttpClient.Headers>
                            <ui:HttpClient.Parameters>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.Parameters>
                            <ui:HttpClient.UrlSegments>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.UrlSegments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:HttpClient>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Document automatically reviewed: &quot; + AnnotationID]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:LogMessage>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,52.6666666666667" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="731.333333333333,2173.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence DisplayName="Data Download" sap:VirtualizedContainerService.HintSize="689.333333333333,2084" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="ExportedDataFilepath" sap:VirtualizedContainerService.HintSize="647.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_41">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[ExportedDataFilepath]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Path.Combine(FolderPathJobj("OutputDataFolder").ToString, AnnotationID)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:WriteTextFile sap2010:Annotation.AnnotationText="Export Data to txt" DisplayName="Write Text File" FileName="[ExportedDataFilepath + &quot;.txt&quot;]" sap:VirtualizedContainerService.HintSize="647.333333333333,166" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[ExportedDataJson]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:WriteTextFile>
                                  <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Export data to excel" DisplayName="Write data to Excel" sap:VirtualizedContainerService.HintSize="647.333333333333,954" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Visible="False" Workbook="[soubor_xlsx]" WorkbookPath="[ExportedDataFilepath]">
                                    <ui:ExcelApplicationScope.Body>
                                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="613.333333333333,814.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT_Invoice]" DisplayName="Handle leading-zeros" sap:VirtualizedContainerService.HintSize="571.333333333333,497.333333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                                            <ui:ForEachRow.Body>
                                              <ActivityAction x:TypeArguments="sd:DataRow">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                </ActivityAction.Argument>
                                                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each cell" sap:VirtualizedContainerService.HintSize="520.666666666667,348" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[DT_Invoice.Columns]">
                                                  <ui:ForEach.Body>
                                                    <ActivityAction x:TypeArguments="x:Object">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="x:Object" Name="column" />
                                                      </ActivityAction.Argument>
                                                      <If Condition="[row(column.ToString).ToString.StartsWith(&quot;0&quot;)]" DisplayName="If leading zero, correct" sap:VirtualizedContainerService.HintSize="484,212.666666666667" sap2010:WorkflowViewState.IdRef="If_16">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <If.Then>
                                                          <Assign DisplayName="correct" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_40">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Object">[row(column.ToString)]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Object">["'" + row(column.ToString).ToString]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </If.Then>
                                                      </If>
                                                    </ActivityAction>
                                                  </ui:ForEach.Body>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:ForEach>
                                              </ActivityAction>
                                            </ui:ForEachRow.Body>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ForEachRow>
                                          <ui:ExcelWriteRange AddHeaders="True" DataTable="[DT_Invoice]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="571.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="Sheet1" StartingCell="A1" />
                                          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="571.333333333333,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_3" Workbook="[soubor_xlsx]" />
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ExcelApplicationScope.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ExcelApplicationScope>
                                  <Assign sap:VirtualizedContainerService.HintSize="647.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_15">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Endpoint]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Endpoint + "/queues/" + QueueID]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If Condition="[TabConfirmedEnabled]" sap:VirtualizedContainerService.HintSize="647.333333333333,210.666666666667" sap2010:WorkflowViewState.IdRef="If_6">
                                    <If.Then>
                                      <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="" BodyFormat="multipart/json" DisplayName="HTTP Request - TO EXPORTED" EndPoint="[Endpoint + &quot;/export?id=&quot; + AnnotationID + &quot;&amp;to_status=exported&quot;]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="HttpClient_8" Method="POST" Result="[ResultJSON]" TimeoutMS="20000">
                                        <ui:HttpClient.Attachments>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                        </ui:HttpClient.Attachments>
                                        <ui:HttpClient.Cookies>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                        </ui:HttpClient.Cookies>
                                        <ui:HttpClient.Headers>
                                          <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                                        </ui:HttpClient.Headers>
                                        <ui:HttpClient.Parameters>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                        </ui:HttpClient.Parameters>
                                        <ui:HttpClient.UrlSegments>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                        </ui:HttpClient.UrlSegments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:HttpClient>
                                    </If.Then>
                                    <If.Else>
                                      <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="" BodyFormat="multipart/json" DisplayName="HTTP Request - DELETE" EndPoint="[URL(&quot;url&quot;).ToString + &quot;/delete&quot;]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="HttpClient_9" Method="POST" Result="[ResultJSON]" TimeoutMS="20000">
                                        <ui:HttpClient.Attachments>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                        </ui:HttpClient.Attachments>
                                        <ui:HttpClient.Cookies>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                        </ui:HttpClient.Cookies>
                                        <ui:HttpClient.Headers>
                                          <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                                        </ui:HttpClient.Headers>
                                        <ui:HttpClient.Parameters>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                        </ui:HttpClient.Parameters>
                                        <ui:HttpClient.UrlSegments>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                        </ui:HttpClient.UrlSegments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:HttpClient>
                                    </If.Else>
                                  </If>
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="647.333333333333,337.333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                    <TryCatch.Try>
                                      <Sequence DisplayName="Match file by Annotation and move it to Processed" sap:VirtualizedContainerService.HintSize="426,458" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="MatchedFile" />
                                          <Variable x:TypeArguments="x:String" Name="NewFileName" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Find matching file" sap:VirtualizedContainerService.HintSize="384,62" sap2010:WorkflowViewState.IdRef="Assign_16">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[MatchedFile]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[Directory.GetFiles(FolderPathJObj("ProcessingSaveFolder").ToString,"*_*" +AnnotationID+ ".*").First]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign New File Name" sap:VirtualizedContainerService.HintSize="384,62" sap2010:WorkflowViewState.IdRef="Assign_46">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[NewFileName]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[MatchedFile.Split("_"c).LastOrDefault]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:MoveFile ContinueOnError="{x:Null}" Destination="[Path.Combine(FolderPathJObj(&quot;ProcessedSaveFolder&quot;).toString, NewFileName)]" DisplayName="Move File to Processed files" sap:VirtualizedContainerService.HintSize="384,162" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[MatchedFile]" />
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,165.333333333333" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;File matching document in ELIS not found in Processing folder&quot;]" />
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </Sequence>
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Set Status and Log" sap:VirtualizedContainerService.HintSize="376,412.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_37">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="Set Document Status in Elis to Postponed for Manual verification" BodyFormat="multipart/json" DisplayName="POSTPONE doc" EndPoint="[URL(&quot;url&quot;).ToString + &quot;/postpone&quot;]" sap:VirtualizedContainerService.HintSize="334,84" sap2010:WorkflowViewState.IdRef="HttpClient_10" Method="POST" Result="[ResultJSON]" TimeoutMS="20000">
                            <ui:HttpClient.Attachments>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.Attachments>
                            <ui:HttpClient.Cookies>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.Cookies>
                            <ui:HttpClient.Headers>
                              <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                            </ui:HttpClient.Headers>
                            <ui:HttpClient.Parameters>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.Parameters>
                            <ui:HttpClient.UrlSegments>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </ui:HttpClient.UrlSegments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:HttpClient>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Document moved to Postponed Folder for manual verification&quot;]" />
                          <Assign DisplayName="Count Invoices" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_49">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[InvoiceCounter]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[InvoiceCounter + 1]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                    <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="1438.66666666667,80.6666666666667" sap2010:WorkflowViewState.IdRef="Delete_3" Path="Data\temp.txt" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1606,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Log Error and send Notification" sap:VirtualizedContainerService.HintSize="376,376" sap2010:WorkflowViewState.IdRef="Sequence_49">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;There was an Error at the Verification Process&quot; + VbCr + exception.Message + VbCr + VbCr + &quot;This is an automatic message&quot;]" DisplayName="Send SMTP Mail Notification" Email="[ConfigObj.Item(&quot;EmailSender&quot;).ToString]" EnableSSL="True" From="[ConfigObj.Item(&quot;EmailSender&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,149.333333333333" sap2010:WorkflowViewState.IdRef="SendMail_2" IsBodyHtml="False" Password="[ConfigObj.Item(&quot;PasswordSender&quot;).ToString]" Port="[Cint(ConfigObj(&quot;SMTPport&quot;).ToString)]" SecureConnection="Auto" Server="[ConfigObj(&quot;SMTPserver&quot;).ToString]" Subject="Error at Checking Invoices at Rossum" To="[ConfigObj.Item(&quot;EmailNotification&quot;).ToString]">
                <ui:SendMail.Files>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                </ui:SendMail.Files>
              </ui:SendMail>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Warn" Message="[exception.Message]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Logout" sap:VirtualizedContainerService.HintSize="526,1504" sap2010:WorkflowViewState.IdRef="Sequence_46">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="loginJson" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[Not InvoiceCounter = 0]" sap:VirtualizedContainerService.HintSize="484,303.333333333333" sap2010:WorkflowViewState.IdRef="If_18">
            <If.Then>
              <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Máte &quot; + InvoiceCounter.ToString + &quot; nových faktur ke kontrole v systému Rossum&quot; + vbCr + &quot;https://elis.rossum.ai/&quot; + vbCr + VbCr + &quot;Toto je automatická zpráva&quot;]" DisplayName="Send SMTP Mail Notification" Email="[ConfigObj.Item(&quot;EmailSender&quot;).ToString]" EnableSSL="True" From="[ConfigObj.Item(&quot;EmailSender&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,149.333333333333" sap2010:WorkflowViewState.IdRef="SendMail_1" IsBodyHtml="False" Password="[ConfigObj.Item(&quot;PasswordSender&quot;).ToString]" Port="[Cint(ConfigObj.Item(&quot;SMTPport&quot;).ToString)]" SecureConnection="Auto" Server="[ConfigObj.Item(&quot;SMTPserver&quot;).ToString]" Subject="New Invoices to Check in Rossum" To="[ConfigObj.Item(&quot;EmailNotification&quot;).ToString]">
                <ui:SendMail.Files>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                </ui:SendMail.Files>
              </ui:SendMail>
            </If.Then>
          </If>
          <Assign DisplayName="Assign Total files to Review" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_73">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_FilesToProcess]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[FilesToReview.ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign Processed Files Count" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_72">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_ProcessedFilesCount]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[(Counter + 1).ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign Count to Verify" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_74">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_ToVerify]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[InvoiceCounter.ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign Verified Count" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_75">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_VerifiedCount]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[(Counter + 1 - InvoiceCounter).ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ReportStatus DisplayName="Report Status" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="ReportStatus_6" StatusText="[&quot;Logging out Account....&quot;]" />
          <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" Result="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[loginJson]" BodyFormat="application/json" DisplayName="HTTP Request - LOGOUT" EndPoint="[Endpoint + &quot;/auth/logout&quot;]" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="HttpClient_12" Method="POST" TimeoutMS="20000">
            <ui:HttpClient.Attachments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Attachments>
            <ui:HttpClient.Cookies>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Cookies>
            <ui:HttpClient.Headers>
              <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
            </ui:HttpClient.Headers>
            <ui:HttpClient.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Parameters>
            <ui:HttpClient.UrlSegments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.UrlSegments>
          </ui:HttpClient>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Finished validating documents.&quot;]" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Trace" Message="[&quot;Acount logged out.&quot;]" />
          <If Condition="[Not out_VerifiedCount.Equals(&quot;0&quot;)]" DisplayName="If any Verified " sap:VirtualizedContainerService.HintSize="484,221.333333333333" sap2010:WorkflowViewState.IdRef="If_26">
            <If.Then>
              <ui:StartJob TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Starts data export from Rossum workflow" DisplayName="Start Job" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="200,67.3333333333333" sap2010:WorkflowViewState.IdRef="StartJob_1" NumberOfRobots="1" ProcessName="Faktury- stáhnout data">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:StartJob>
            </If.Then>
          </If>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>